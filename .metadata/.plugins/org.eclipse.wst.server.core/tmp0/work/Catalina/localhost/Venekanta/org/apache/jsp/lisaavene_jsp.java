/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-20 21:12:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class lisaavene_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<script src=\"scripts/main.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"http://ajax.aspnetcdn.com/ajax/jquery.validate/1.15.0/jquery.validate.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\r\n");
      out.write("<title>lisaa vene</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<form id=\"tiedot\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th colspan=\"7\" class=\"oikealle\"><span id=\"takaisin\">Takaisin\r\n");
      out.write("\t\t\t\t\t\t\tlistaukseen</span></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>Nimi</th>\r\n");
      out.write("\t\t\t\t\t<th>Merkki ja Malli</th>\r\n");
      out.write("\t\t\t\t\t<th>Pituus</th>\r\n");
      out.write("\t\t\t\t\t<th>Leveys</th>\r\n");
      out.write("\t\t\t\t\t<th>Hinta</th>\r\n");
      out.write("\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"nimi\" id=\"nimi\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"merkkimalli\" id=\"merkkimalli\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"pituus\" id=\"pituus\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"leveys\" id=\"leveys\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"hinta\" id=\"hinta\"></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"submit\" id=\"tallenna\" value=\"Lisää\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t<span id=\"ilmo\"></span>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$(\"#takaisin\").click(function() {\r\n");
      out.write("\t\t\tdocument.location = \"listaaveneet.jsp\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"#tiedot\").validate({\r\n");
      out.write("\t\t\trules : {\r\n");
      out.write("\t\t\t\tnimi : {\r\n");
      out.write("\t\t\t\t\trequired : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tmerkkimalli : {\r\n");
      out.write("\t\t\t\t\trequired : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpituus : {\r\n");
      out.write("\t\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\t\tnumber : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tleveys : {\r\n");
      out.write("\t\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\t\tnumber : true\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\thinta : {\r\n");
      out.write("\t\t\t\t\trequired : true,\r\n");
      out.write("\t\t\t\t\tnumber : true\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tmessages : {\r\n");
      out.write("\t\t\t\tnimi : {\r\n");
      out.write("\t\t\t\t\trequired : \"Anna nimi\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tmerkkimalli : {\r\n");
      out.write("\t\t\t\t\trequired : \"Anna merkki ja malli\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tpituus : {\r\n");
      out.write("\t\t\t\t\trequired : \"Anna pituus kokonais- tai desimaalilukuna\",\r\n");
      out.write("\t\t\t\t\tnumber : \"Käytä desimaalierottimena pistettä (.)\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tleveys : {\r\n");
      out.write("\t\t\t\t\trequired : \"Anna leveys kokonais- tai desimaalilukuna\",\r\n");
      out.write("\t\t\t\t\tnumber : \"Käytä desimaalierottimena pistettä (.)\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\thinta : {\r\n");
      out.write("\t\t\t\t\trequired : \"Anna hinta (kokonais- tai desimaaliluku)\",\r\n");
      out.write("\t\t\t\t\tnumber : \"Käytä desimaalierottimena pistettä (.)\"\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsubmitHandler : function(form) {\r\n");
      out.write("\t\t\t\tlisaaTiedot();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//viedään kursori etunimi-kenttään sivun latauksen yhteydessä\r\n");
      out.write("\t\t$(\"#nimi\").focus();\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\t//funktio tietojen lisäämistä varten. Kutsutaan backin POST-metodia ja välitetään kutsun mukana uudet tiedot json-stringinä.\r\n");
      out.write("\t//POST /veneet/\r\n");
      out.write("\tfunction lisaaTiedot() {\r\n");
      out.write("\t\tvar formJsonStr = formDataJsonStr($(\"#tiedot\").serializeArray()); //muutetaan lomakkeen tiedot json-stringiksi\r\n");
      out.write("\t\tconsole.log(formJsonStr); //kts. Selain F12\r\n");
      out.write("\t\t// #tiedot lomakkeen tiedot JSon Stringinä viedään Asiakkaat BackEndiin ja kutsutaan sen  doPost metodia \r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"veneet\",\r\n");
      out.write("\t\t\tdata : formJsonStr,\r\n");
      out.write("\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tsuccess : function(result) { //result on joko {\"response:1\"} tai {\"response:0\"}       \r\n");
      out.write("\t\t\t\tif (result.response == 0) {\r\n");
      out.write("\t\t\t\t\t$(\"#ilmo\").html(\"Veneen lisääminen epäonnistui.\");\r\n");
      out.write("\t\t\t\t} else if (result.response == 1) {\r\n");
      out.write("\t\t\t\t\t$(\"#ilmo\").html(\"Veneen lisääminen onnistui.\");\r\n");
      out.write("\t\t\t\t\t$(\"#nimi, #merkkimalli, #pituus, #leveys, #hinta\").val(\"\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
