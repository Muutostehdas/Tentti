/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-21 15:16:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class listaaveneet_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\">\r\n");
      out.write("<title>listaa veneet</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table id=\"listaus\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th colspan=\"6\" class=\"oikealle\"><span id=\"uusiVene\">Lisää\r\n");
      out.write("\t\t\t\t\t\tuusi vene</span></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th class=\"oikealle\">Hakusana:</th>\r\n");
      out.write("\t\t\t\t<th colspan=\"4\"><input type=\"text\" id=\"hakusana\"></th>\r\n");
      out.write("\t\t\t\t<th><input type=\"button\" value=\"hae\" id=\"hakunappi\"></th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th>Veneen nimi</th>\r\n");
      out.write("\t\t\t\t<th>Merkki ja malli</th>\r\n");
      out.write("\t\t\t\t<th>Pituus</th>\r\n");
      out.write("\t\t\t\t<th>Leveys</th>\r\n");
      out.write("\t\t\t\t<th>Hinta</th>\r\n");
      out.write("\t\t\t\t<th>&nbsp;</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(document).ready(function() {\r\n");
      out.write("\t\t\t$(\"#uusiVene\").click(function() {\r\n");
      out.write("\t\t\t\tdocument.location = \"lisaavene.jsp\";\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\thaeVeneet();\r\n");
      out.write("\t\t\t$(\"#hakunappi\").click(function() {\r\n");
      out.write("\t\t\t\thaeVeneet();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(document.body).on(\"keydown\", function(event) {\r\n");
      out.write("\t\t\t\tif (event.which == 13) { //Enteriä painettu, ajetaan haku\r\n");
      out.write("\t\t\t\t\thaeVeneet();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#hakusana\").focus();//viedään kursori hakusana-kenttään sivun latauksen yhteydessä\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t//Funktio tietojen hakemista varten\r\n");
      out.write("\t\t//GET   /asiakkaat/{hakusana}\r\n");
      out.write("\t\tfunction haeVeneet() {\r\n");
      out.write("\t\t\t$(\"#listaus tbody\").empty();\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"veneet/\" + $(\"#hakusana\").val(),\r\n");
      out.write("\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\tsuccess : function(result) {//Funktio palauttaa tiedot json-objektina\t\t\r\n");
      out.write("\t\t\t\t\t$.each(result.veneet, function(i, field) {\r\n");
      out.write("\t\t\t\t\t\tvar htmlStr;\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<tr id='rivi_\"+field.tunnus +\"'>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td>\" + field.nimi + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td>\" + field.merkkimalli + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td>\" + field.pituus + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td>\" + field.leveys + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td>\" + field.hinta + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<td><a href='muutavene.jsp?tunnus=\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ field.tunnus + \"'>Muuta</a>&nbsp;\";\r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"<span class='poista' onclick=poista(\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ field.tunnus + \",'\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ field.nimi.replace(\" \", \"&nbsp;\") + \"','\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ field.merkkimalli.replace(\" \", \"&nbsp;\")\r\n");
      out.write("\t\t\t\t\t\t\t\t+ \"')>Poista</span></td>\"; //Muodostetaan linkki \r\n");
      out.write("\t\t\t\t\t\thtmlStr += \"</tr>\";\r\n");
      out.write("\t\t\t\t\t\t$(\"#listaus tbody\").append(htmlStr);\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//Funktio tietojen poistamista varten. Kutsutaan backin DELETE-metodia ja välitetään poistettavan tiedon id. \r\n");
      out.write("\t\t//DELETE /veneet/id\r\n");
      out.write("\t\tfunction poista(tunnus, nimi, merkkimalli) {\r\n");
      out.write("\t\t\tif (confirm(\"Poista vene \" + nimi + \" , \" + merkkimalli + \"?\")) {\r\n");
      out.write("\t\t\t\t$\r\n");
      out.write("\t\t\t\t\t\t.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl : \"veneet/\" + tunnus,\r\n");
      out.write("\t\t\t\t\t\t\ttype : \"DELETE\",\r\n");
      out.write("\t\t\t\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(result) { //result on joko {\"response:1\"} tai {\"response:0\"}\r\n");
      out.write("\t\t\t\t\t\t\t\tif (result.response == 0) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#ilmo\").html(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"Veneen poisto epäonnistui.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t} else if (result.response == 1) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$(\"#rivi_\" + tunnus).css(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\"background-color\", \"red\"); //Värjätään poistetun asiakkaan rivi\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(\"Veneen \" + nimi + \" \" + merkkimalli\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \" poisto onnistui.\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\thaeVeneet();\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
